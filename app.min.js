$(document).ready(function () { var e, a, t, o, n, s, l, b = $("#first-parameter"), i = $("#second-parameter"), r = $("#render-button"), p = $("#myChart"), c = $("#intro-message"), d = $("#back-button"), m = 1, u = ""; function k(e, a) { for (var t = 0, o = 0; o < a.length; o += 1)t += Math.pow(a[o] - e, 2); return t / (a.length - 1) } function h(e) { return e.replace(/\w\S*/g, function (e) { return e.charAt(0).toUpperCase() + e.substr(1).toLowerCase() }) } function y(e) { void 0 === e.dataSeries.visible || e.dataSeries.visible ? e.dataSeries.visible = !1 : e.dataSeries.visible = !0, e.chart.render() } function v() { d.addClass("show") } function f() { var e = jQuery.extend(!0, {}, generationsToObjectTemplate); for (var a in e) if (e.hasOwnProperty(a)) for (var t in e[a] = jQuery.extend(!0, {}, typesToObjectTemplate), e[a]) e[a].hasOwnProperty(t) && (e[a][t] = jQuery.extend(!0, {}, sumStatsTemplate)); return e } function g(e) { switch (e) { case "baseStats": return "Pokémon Average Base Stats"; case "types": return "Number of Pokémon Introduced by Type"; case "totalFav": return "Total Favorite Votes"; case "avgFav": return "Average Votes per Pokémon" } } function C(e) { var a = function (e, a) { for (; e.length < a;)e = "0" + e; return e }(e.dataPoint.dexNum, 3); window.open("https://www.serebii.net/pokedex-sm/" + a + ".shtml", "_blank") } function T(t) { m = 2, v(); var o = t.dataPoint.label.toLowerCase(), n = h(o); (e = new CanvasJS.Chart("myChart", { animationEnabled: !0, zoomEnabled: !0, theme: "dark1", title: { text: "Base Stats for Generation " + n + " Pokémon" }, axisX: { title: "Pokémon" }, axisY: { title: "Stat Values" }, axisY2: { title: "Favotite Votes" }, toolTip: { fontFamily: "Roboto" }, legend: { cursor: "pointer", itemclick: y }, data: [{ type: "stackedColumn", showInLegend: !0, color: "#da4f4a", name: "Attack", dataPoints: a.pokemonGens[o].attack, toolTipContent: "Base <b>attack</b> of <b>{label}</b>: <b>{y}</b><br/><b>Attack</b> makes up <b>{p}%</b> of base stats total<br/>This pokémon is <b>{r}</b><br/>Click to see all data about <b>{label}</b> (opens external link)", click: C }, { type: "stackedColumn", showInLegend: !0, color: "#016ecd", name: "Defense", dataPoints: a.pokemonGens[o].defense, toolTipContent: "Base <b>defense</b> of <b>{label}</b>: <b>{y}</b><br/><b>Defense</b> makes up <b>{p}%</b> of base stats total<br/>This pokémon is <b>{r}</b><br/>Click to see all data about <b>{label}</b> (opens external link)", click: C }, { type: "stackedColumn", showInLegend: !0, color: "#5ab75c", name: "Hit Points", dataPoints: a.pokemonGens[o]["hit points"], toolTipContent: "Base <b>hit points</b> of <b>{label}</b>: <b>{y}</b><br/><b>Hit Points</b> make up <b>{p}%</b> of base stats total<br/>This pokémon is <b>{r}</b><br/>Click to see all data about <b>{label}</b> (opens external link)", click: C }, { type: "stackedColumn", showInLegend: !0, color: "#faa632", name: "Special Attack", dataPoints: a.pokemonGens[o]["special attack"], toolTipContent: "Base <b>special attack</b> of <b>{label}</b>: <b>{y}</b><br/><b>Special Attack</b> makes up <b>{p}%</b> of base stats total<br/>This pokémon is <b>{r}</b><br/>Click to see all data about <b>{label}</b> (opens external link)", click: C }, { type: "stackedColumn", showInLegend: !0, color: "#4aafcd", name: "Special Defense", dataPoints: a.pokemonGens[o]["special defense"], toolTipContent: "Base <b>special defense</b> of <b>{label}</b>: <b>{y}</b><br/><b>Special Defense</b> makes up <b>{p}%</b> of base stats total<br/>This pokémon is <b>{r}</b><br/>Click to see all data about <b>{label}</b> (opens external link)", click: C }, { type: "stackedColumn", showInLegend: !0, color: "#9d29b2", name: "Speed", dataPoints: a.pokemonGens[o].speed, toolTipContent: "Base <b>speed</b> of <b>{label}</b>: <b>{y}</b><br/><b>Speed</b> makes up <b>{p}%</b> of base stats total<br/>This pokémon is <b>{r}</b><br/>Click to see all data about <b>{label}</b> (opens external link)", click: C }, { type: "line", axisYType: "secondary", showInLegend: !0, name: "Favorite Votes", color: "white", dataPoints: a.pokemonGens[o].votes, toolTipContent: "Votes casted for <b>{label}</b>: <b>{y}</b><br/>This pokémon is <b>{r}</b><br/>Click to see all data about <b>{label}</b> (opens external link)", click: C }] })).render() } function x(t) { m = 2, v(), u = t.dataPoint.type.toLowerCase(), (e = new CanvasJS.Chart("myChart", { animationEnabled: !0, zoomEnabled: !0, theme: "dark1", title: { text: "Average Base Stats for " + h(u) + " Pokémon Across Generations" }, axisX: { title: "Pokémon" }, axisY: { title: "Average Stat Values" }, axisY2: { title: "Total Favorite Votes" }, toolTip: { fontFamily: "Roboto" }, legend: { cursor: "pointer", itemclick: y }, data: [{ type: "stackedColumn", showInLegend: !0, color: "#da4f4a", name: "Attack", dataPoints: a.typeAvgStats[u].attack, toolTipContent: "Generation <b>{label}</b> - <b>" + u + "</b> pokémon<br/>Average base <b>attack</b>: <b>{y}</b><hr/>Click to visualize base stats of <b>" + u + "</b> pokémon in generation <b>{label}</b>", click: P }, { type: "stackedColumn", showInLegend: !0, color: "#016ecd", name: "Defense", dataPoints: a.typeAvgStats[u].defense, toolTipContent: "Generation <b>{label}</b> - <b>" + u + "</b> pokémon<br/>Average base <b>defense</b>: <b>{y}</b><hr/>Click to visualize base stats of <b>" + u + "</b> pokémon in generation <b>{label}</b>", click: P }, { type: "stackedColumn", showInLegend: !0, color: "#5ab75c", name: "Hit Points", dataPoints: a.typeAvgStats[u]["hit points"], toolTipContent: "Generation <b>{label}</b> - <b>" + u + "</b> pokémon<br/>Average base <b>hit points</b>: <b>{y}</b><hr/>Click to visualize base stats of <b>" + u + "</b> pokémon in generation <b>{label}</b>", click: P }, { type: "stackedColumn", showInLegend: !0, color: "#faa632", name: "Special Attack", dataPoints: a.typeAvgStats[u]["special attack"], toolTipContent: "Generation <b>{label}</b> - <b>" + u + "</b> pokémon<br/>Average base <b>special attack</b>: <b>{y}</b><hr/>Click to visualize base stats of <b>" + u + "</b> pokémon in generation <b>{label}</b>", click: P }, { type: "stackedColumn", showInLegend: !0, color: "#4aafcd", name: "Special Defense", dataPoints: a.typeAvgStats[u]["special defense"], toolTipContent: "Generation <b>{label}</b> - <b>" + u + "</b> pokémon<br/>Average base <b>special defense</b>: <b>{y}</b><hr/>Click to visualize base stats of <b>" + u + "</b> pokémon in generation <b>{label}</b>", click: P }, { type: "stackedColumn", showInLegend: !0, color: "#9d29b2", name: "Speed", dataPoints: a.typeAvgStats[u].speed, toolTipContent: "Generation <b>{label}</b> - <b>" + u + "</b> pokémon<br/>Average base <b>speed</b>: <b>{y}</b><hr/>Click to visualize base stats of <b>" + u + "</b> pokémon in generation <b>{label}</b>", click: P }, { type: "line", axisYType: "secondary", showInLegend: !0, color: "white", name: "Favorite Votes", dataPoints: a.typeAvgStats[u].votes, toolTipContent: "Generation <b>{label}</b> - <b>" + u + "</b> pokémon<br/>Total votes casted: <b>{y}</b><hr/>Click to visualize base stats of <b>" + u + "</b> pokémon in generation <b>{label}</b>", click: P }] })).render() } function P(t) { m = 3, v(); var o = t.dataPoint.label.toLowerCase(), n = t.dataPoint.type.toLowerCase(); (e = new CanvasJS.Chart("myChart", { animationEnabled: !0, zoomEnabled: !0, theme: "dark1", title: { text: "Base Stats for Generation " + h(o) + " - " + h(n) + " Pokémon" }, axisX: { title: "Pokémon" }, axisY: { title: "Stat Values" }, axisY2: { title: "Total Favorite Votes" }, toolTip: { fontFamily: "Roboto" }, legend: { cursor: "pointer", itemclick: y }, data: [{ type: "stackedColumn", showInLegend: !0, color: "#da4f4a", name: "Attack", dataPoints: a.pokemonTypeGens[o][n].attack, toolTipContent: "Base <b>attack</b> of <b>{label}</b>: <b>{y}</b><br/><b>Attack</b> makes up <b>{p}%</b> of base stats total<br/>This pokémon is <b>{r}</b><br/>Click to see all data about <b>{label}</b> (opens external link)", click: C }, { type: "stackedColumn", showInLegend: !0, color: "#016ecd", name: "Defense", dataPoints: a.pokemonTypeGens[o][n].defense, toolTipContent: "Base <b>defense</b> of <b>{label}</b>: <b>{y}</b><br/><b>Defense</b> makes up <b>{p}%</b> of base stats total<br/>This pokémon is <b>{r}</b><br/>Click to see all data about <b>{label}</b> (opens external link)", click: C }, { type: "stackedColumn", showInLegend: !0, color: "#5ab75c", name: "Hit Points", dataPoints: a.pokemonTypeGens[o][n]["hit points"], toolTipContent: "Base <b>hit points</b> of <b>{label}</b>: <b>{y}</b><br/><b>Hit Points</b> make up <b>{p}%</b> of base stats total<br/>This pokémon is <b>{r}</b><br/>Click to see all data about <b>{label}</b> (opens external link)", click: C }, { type: "stackedColumn", showInLegend: !0, color: "#faa632", name: "Special Attack", dataPoints: a.pokemonTypeGens[o][n]["special attack"], toolTipContent: "Base <b>special attack</b> of <b>{label}</b>: <b>{y}</b><br/><b>Special Attack</b> makes up <b>{p}%</b> of base stats total<br/>This pokémon is <b>{r}</b><br/>Click to see all data about <b>{label}</b> (opens external link)", click: C }, { type: "stackedColumn", showInLegend: !0, color: "#4aafcd", name: "Special Defense", dataPoints: a.pokemonTypeGens[o][n]["special defense"], toolTipContent: "Base <b>special defense</b> of <b>{label}</b>: <b>{y}</b><br/><b>Special Defense</b> makes up <b>{p}%</b> of base stats total<br/>This pokémon is <b>{r}</b><br/>Click to see all data about <b>{label}</b> (opens external link)", click: C }, { type: "stackedColumn", showInLegend: !0, color: "#9d29b2", name: "Speed", dataPoints: a.pokemonTypeGens[o][n].speed, toolTipContent: "Base <b>speed</b> of <b>{label}</b>: <b>{y}</b><br/><b>Speed</b> makes up <b>{p}%</b> of base stats total<br/>This pokémon is <b>{r}</b><br/>Click to see all data about <b>{label}</b> (opens external link)", click: C }, { type: "line", axisYType: "secondary", showInLegend: !0, color: "white", name: "Favorite Votes", dataPoints: a.pokemonTypeGens[o][n].votes, toolTipContent: "Votes casted for <b>{label}</b>: <b>{y}</b><hr/>Click to see all data about <b>{label}</b> (opens external link)", click: C }] })).render() } function S(a, t, o) { d.removeClass("show"), p.show(); var n = { animationEnabled: !0, zoomEnabled: !0, theme: "dark1", axisX: { title: "Pokémon Generation" }, axisY: { title: t }, axisY2: {}, toolTip: { fontFamily: "Roboto" }, legend: { cursor: "pointer", itemclick: y }, data: a }; o && (n.axisY2 = { title: o }), (e = new CanvasJS.Chart("myChart", n)).render() } (s = "final-pokemon.csv", l = "./datasets/" + s, $.get(l)).then(function (e) { var t = function (e) { return Papa.parse(e, { headers: !0 }).data }(e); a = function (e) { for (var a = jQuery.extend(!0, {}, baseStatsToArrayTemplate), t = jQuery.extend(!0, {}, generationToArrayTemplate), o = {}, n = function () { var e = jQuery.extend(!0, {}, generationsToObjectTemplate); for (var a in e) if (e.hasOwnProperty(a)) for (var t in e[a] = jQuery.extend(!0, {}, typesToObjectTemplate), e[a]) e[a].hasOwnProperty(t) && (e[a][t] = jQuery.extend(!0, {}, baseStatsToArrayTemplate)); return e }(), s = function () { var e = jQuery.extend(!0, {}, typesToObjectTemplate); for (var a in e) e.hasOwnProperty(a) && (e[a] = jQuery.extend(!0, {}, baseStatsToArrayTemplate)); return e }(), l = {}, b = [], i = 1; i < e.length - 1; i += 1) { var r = e[i], p = r[0]; t[p].push(r) } for (var c in t) if (t.hasOwnProperty(c)) { var d, p = t[c], m = sumDef = sumHP = sumSpAtk = sumSpDef = sumSpeed = sumFav = 0, u = f(), y = 0, v = 9999, g = leastVotedPokemon = "", C = {}, T = h(c), x = []; o[c] = jQuery.extend(!0, {}, baseStatsToArrayTemplate); for (var i = 0; i < p.length; i += 1) { var P = p[i], S = h(P[1]); d = P[3]; var w = parseInt(P[12]); x.push(w), w > y && (y = w, g = S), w < v && (v = w, leastVotedPokemon = S), C[d] ? (C[d].count += 1, C[d].votes += w) : C[d] = { count: 1, votes: w }, n[c][d].attack.push({ label: S, dexNum: P[2], y: parseInt(P[4]), p: (P[4] / P[10] * 100).toFixed(1), r: P[11] }), n[c][d].defense.push({ label: S, dexNum: P[2], y: parseInt(P[5]), p: (P[5] / P[10] * 100).toFixed(1), r: P[11] }), n[c][d]["hit points"].push({ label: S, dexNum: P[2], y: parseInt(P[6]), p: (P[6] / P[10] * 100).toFixed(1), r: P[11] }), n[c][d]["special attack"].push({ label: S, dexNum: P[2], y: parseInt(P[7]), p: (P[7] / P[10] * 100).toFixed(1), r: P[11] }), n[c][d]["special defense"].push({ label: S, dexNum: P[2], y: parseInt(P[8]), p: (P[8] / P[10] * 100).toFixed(1), r: P[11] }), n[c][d].speed.push({ label: S, dexNum: P[2], y: parseInt(P[9]), p: (P[9] / P[10] * 100).toFixed(1), r: P[11] }), n[c][d].votes.push({ label: S, dexNum: P[2], y: w, r: P[11] }), o[c].attack.push({ label: S, dexNum: P[2], y: parseInt(P[4]), p: (P[4] / P[10] * 100).toFixed(1), r: P[11] }), o[c].defense.push({ label: S, dexNum: P[2], y: parseInt(P[5]), p: (P[5] / P[10] * 100).toFixed(1), r: P[11] }), o[c]["hit points"].push({ label: S, dexNum: P[2], y: parseInt(P[6]), p: (P[6] / P[10] * 100).toFixed(1), r: P[11] }), o[c]["special attack"].push({ label: S, dexNum: P[2], y: parseInt(P[7]), p: (P[7] / P[10] * 100).toFixed(1), r: P[11] }), o[c]["special defense"].push({ label: S, dexNum: P[2], y: parseInt(P[8]), p: (P[8] / P[10] * 100).toFixed(1), r: P[11] }), o[c].speed.push({ label: S, dexNum: P[2], y: parseInt(P[9]), p: (P[9] / P[10] * 100).toFixed(1), r: P[11] }), o[c].votes.push({ label: S, dexNum: P[2], y: w, r: P[11] }), m += parseInt(P[4]), sumDef += parseInt(P[5]), sumHP += parseInt(P[6]), sumSpAtk += parseInt(P[7]), sumSpDef += parseInt(P[8]), sumSpeed += parseInt(P[9]), sumFav += w, u[c][d].attack += parseInt(P[4]), u[c][d].defense += parseInt(P[5]), u[c][d]["hit points"] += parseInt(P[6]), u[c][d]["special attack"] += parseInt(P[7]), u[c][d]["special defense"] += parseInt(P[8]), u[c][d].speed += parseInt(P[9]), u[c][d].votes += w } for (var I of pokemonTypes) { if (l[I] || (l[I] = []), C[I]) { var A = C[I].count, F = C[I].votes; l[I].push({ label: T, y: A, p: (A / p.length * 100).toFixed(2), v: F, pv: (F / sumFav * 100).toFixed(2), type: I }) } else l[I].push({}); s[I].attack.push({ label: T, y: Math.round(u[c][I].attack / A), type: I }), s[I].defense.push({ label: T, y: Math.round(u[c][I].defense / A), type: I }), s[I]["hit points"].push({ label: T, y: Math.round(u[c][I]["hit points"] / A), type: I }), s[I]["special attack"].push({ label: T, y: Math.round(u[c][I]["special attack"] / A), type: I }), s[I]["special defense"].push({ label: T, y: Math.round(u[c][I]["special defense"] / A), type: I }), s[I].speed.push({ label: T, y: Math.round(u[c][I].speed / A), type: I }), s[I].votes.push({ label: T, y: F, type: I }) } var G = sumFav / p.length; genVariance = k(G, x), genStdDev = Math.sqrt(genVariance).toFixed(2), a.attack.push({ label: T, y: Math.round(m / p.length) }), a.defense.push({ label: T, y: Math.round(sumDef / p.length) }), a["hit points"].push({ label: T, y: Math.round(sumHP / p.length) }), a["special attack"].push({ label: T, y: Math.round(sumSpAtk / p.length) }), a["special defense"].push({ label: T, y: Math.round(sumSpDef / p.length) }), a.speed.push({ label: T, y: Math.round(sumSpeed / p.length) }), a.votes.push({ label: T, y: Math.round(G), v: genVariance.toFixed(2), stddev: genStdDev }), b.push({ label: T, y: sumFav, mv: y, mp: g, lv: v, lp: leastVotedPokemon }) } return { averages: a, pokemonGens: o, pokemonTypeGens: n, numOfType: l, genFavorites: b, typeAvgStats: s } }(t), function () { for (var e = 0; e < baseStats.length; e += 1) { var t = baseStats[e], o = h(t); canvasData.baseStats.push({ type: "stackedColumn", showInLegend: !0, color: canvasColors.baseStats[t], name: o, dataPoints: a.averages[t], toolTipContent: "<b>Generation {label}:</b><br/>Average <b>" + o + "</b>: {y}<br/><hr/>Click to visualize <b>Generation {label}</b>", click: T }) } for (var e = 0; e < pokemonTypes.length; e += 1) { var n = pokemonTypes[e], s = h(n); canvasData.types.push({ type: "stackedColumn", showInLegend: !0, name: s, color: canvasColors.types[n], dataPoints: a.numOfType[n], toolTipContent: "<b>Generation {label}:</b><br/>Number of <b>" + s + "</b> Pokémon Introduced: {y}<br/>Percentage of Total Pokémon Added: {p}%<br/>Total votes for <b>" + s + "</b> Pokémon: {v}<br/>Percentage of Total Votes: {pv}%<br/><hr/>Click to visualize average base stats of <b>" + s + "</b> type pokémon across generations</b>", click: x }) } canvasData.totalFav = [{ type: "line", showInLegend: !0, name: "Favorites", color: "white", dataPoints: a.genFavorites, toolTipContent: "<b>Generation {label}:</b><br/>Number of Votes: {y}<br/><b>{mp}</b> had the <b>most votes</b> at <b>{mv}</b> votes<br/><b>{lp}</b> had the <b>least votes</b> at <b>{lv}</b> votes<br/><hr/>Click to visualize <b>Generation {label}</b>", click: T }], canvasData.avgFav = [{ type: "line", showInLegend: !0, name: "Avg. Number of Favorites", color: "white", dataPoints: a.averages.votes, toolTipContent: "<b>Generation {label}:</b><br/>Avg. Number of Votes per Pokémon: {y}<br/>Sample variance: {v}<br/>Sample standard deviation: {stddev}<br/><hr/>Click to visualize <b>Generation {label}</b>", click: T }] }() }), d.on("click", function () { e && (e.destroy(), e = null), 3 === m ? x({ dataPoint: { type: u } }) : 2 === m && S(t, o, n) }), b.on("change", function () { var e = b.val(), a = i.val(); "all" === e ? (i.attr("disabled", "disabled"), r.removeClass("disabled")) : (e && a && e !== a ? r.removeClass("disabled") : e && a && e === a && r.addClass("disabled"), i.removeAttr("disabled"), i.children().each(function () { var a = $(this); a.val() === e ? a.attr("disabled", "disabled") : "title" !== a.val() && a.removeAttr("disabled") })) }), i.on("change", function () { var e = b.val(), a = i.val(); e && a && e !== a ? r.removeClass("disabled") : e && a && e === a && r.addClass("disabled") }), r.on("click", function () { $(this).hasClass("disabled") || (c.hide(), function (e, a) { if ("all" === e) { canvasData.totalFav[0].color = "red"; for (var s = canvasData.baseStats.concat(canvasData.totalFav), l = canvasData.types.concat(canvasData.avgFav), b = 0; b < s.length; b += 1)s[b].axisYType = "primary"; for (var i = 0; i < l.length; i += 1)l[i].axisYType = "secondary"; t = canvasData.baseStats.concat(l, canvasData.totalFav), o = "Pokémon Average Base Stats & Total Favorite Votes", n = "Number of Pokémon Introduced by Type & Average Votes per Pokémon" } else if ("onlyFirst" === a) t = canvasData[e], o = g(e), n = void 0; else { for (var r = canvasData[e], p = canvasData[a], b = 0; b < r.length; b += 1)r[b].axisYType = "primary"; for (var i = 0; i < p.length; i += 1)p[i].axisYType = "secondary"; "line" === r[0].type && "line" === p[0].type ? (r[0].color = "red", p[0].color = "white") : "line" === r[0].type && "line" !== p[0].type ? r[0].color = "white" : "line" !== r[0].type && "line" === p[0].type && (p[0].color = "white"), t = "line" === r[0].type ? p.concat(r) : r.concat(p), o = g(e), n = g(a) } S(t, o, n) }(b.val(), i.val())) }) });