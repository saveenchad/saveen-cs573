$(document).ready(function () { var e, a, t, o, n, s, l, b = $("#first-parameter"), i = $("#second-parameter"), r = $("#render-button"), p = $("#myChart"), d = $("#intro-message"), c = $("#back-button"); function m(e, a) { for (var t = 0, o = 0; o < a.length; o += 1)t += Math.pow(a[o] - e, 2); return t / (a.length - 1) } function u(e) { return e.replace(/\w\S*/g, function (e) { return e.charAt(0).toUpperCase() + e.substr(1).toLowerCase() }) } function k(e) { void 0 === e.dataSeries.visible || e.dataSeries.visible ? e.dataSeries.visible = !1 : e.dataSeries.visible = !0, e.chart.render() } function h() { c.addClass("show") } function v(e) { switch (e) { case "baseStats": return "Pokémon Average Base Stats"; case "types": return "Number of Pokémon Introduced by Type"; case "totalFav": return "Total Favorite Votes"; case "avgFav": return "Average Votes per Pokémon" } } function f(e) { var a = function (e, a) { for (; e.length < a;)e = "0" + e; return e }(e.dataPoint.dexNum, 3); window.open("https://www.serebii.net/pokedex-sm/" + a + ".shtml", "_blank") } function y(t) { h(); var o = t.dataPoint.label.toLowerCase(), n = u(o); (e = new CanvasJS.Chart("myChart", { animationEnabled: !0, zoomEnabled: !0, theme: "dark1", title: { text: "Base Stats for Generation " + n + " Pokémon" }, axisX: { title: "Pokémon" }, axisY: { title: "Stat Values" }, axisY2: { title: "Favotite Votes" }, toolTip: { fontFamily: "Roboto" }, legend: { cursor: "pointer", itemclick: k }, data: [{ type: "stackedColumn", showInLegend: !0, color: "#da4f4a", name: "Attack", dataPoints: a.pokemonGens[o].attack, toolTipContent: "Base <b>attack</b> of <b>{label}</b>: <b>{y}</b><br/><b>Attack</b> makes up <b>{p}%</b> of base stats total<br/>This pokémon is <b>{r}</b><br/>Click to see all data about <b>{label}</b> (opens external link)", click: f }, { type: "stackedColumn", showInLegend: !0, color: "#016ecd", name: "Defense", dataPoints: a.pokemonGens[o].defense, toolTipContent: "Base <b>defense</b> of <b>{label}</b>: <b>{y}</b><br/><b>Defense</b> makes up <b>{p}%</b> of base stats total<br/>This pokémon is <b>{r}</b><br/>Click to see all data about <b>{label}</b> (opens external link)", click: f }, { type: "stackedColumn", showInLegend: !0, color: "#5ab75c", name: "Hit Points", dataPoints: a.pokemonGens[o]["hit points"], toolTipContent: "Base <b>hit points</b> of <b>{label}</b>: <b>{y}</b><br/><b>Hit Points</b> make up <b>{p}%</b> of base stats total<br/>This pokémon is <b>{r}</b><br/>Click to see all data about <b>{label}</b> (opens external link)", click: f }, { type: "stackedColumn", showInLegend: !0, color: "#faa632", name: "Special Attack", dataPoints: a.pokemonGens[o]["special attack"], toolTipContent: "Base <b>special attack</b> of <b>{label}</b>: <b>{y}</b><br/><b>Special Attack</b> makes up <b>{p}%</b> of base stats total<br/>This pokémon is <b>{r}</b><br/>Click to see all data about <b>{label}</b> (opens external link)", click: f }, { type: "stackedColumn", showInLegend: !0, color: "#4aafcd", name: "Special Defense", dataPoints: a.pokemonGens[o]["special defense"], toolTipContent: "Base <b>special defense</b> of <b>{label}</b>: <b>{y}</b><br/><b>Special Defense</b> makes up <b>{p}%</b> of base stats total<br/>This pokémon is <b>{r}</b><br/>Click to see all data about <b>{label}</b> (opens external link)", click: f }, { type: "stackedColumn", showInLegend: !0, color: "#9d29b2", name: "Speed", dataPoints: a.pokemonGens[o].speed, toolTipContent: "Base <b>speed</b> of <b>{label}</b>: <b>{y}</b><br/><b>Speed</b> makes up <b>{p}%</b> of base stats total<br/>This pokémon is <b>{r}</b><br/>Click to see all data about <b>{label}</b> (opens external link)", click: f }, { type: "line", axisYType: "secondary", showInLegend: !0, name: "Favorite Votes", color: "white", dataPoints: a.pokemonGens[o].favorites, toolTipContent: "Votes casted for <b>{label}</b>: <b>{y}</b><br/>This pokémon is <b>{r}</b><br/>Click to see all data about <b>{label}</b> (opens external link)", click: f }] })).render() } function C(t) { h(); var o = t.dataPoint.label.toLowerCase(), n = t.dataPoint.type.toLowerCase(); (e = new CanvasJS.Chart("myChart", { animationEnabled: !0, zoomEnabled: !0, theme: "dark1", title: { text: "Base Stats and Favorite Votes for Generation " + u(o) + " - " + u(n) + " Pokémon" }, axisX: { title: "Pokémon" }, axisY: { title: "Stat Values" }, axisY2: { title: "Favorite Votes" }, toolTip: { fontFamily: "Roboto" }, legend: { cursor: "pointer", itemclick: k }, data: [{ type: "stackedColumn", showInLegend: !0, color: "#da4f4a", name: "Attack", dataPoints: a.pokemonTypeGens[o][n].attack, toolTipContent: "Base <b>attack</b> of <b>{label}</b>: <b>{y}</b><br/><b>Attack</b> makes up <b>{p}%</b> of base stats total<br/>This pokémon is <b>{r}</b><br/>Click to see all data about <b>{label}</b> (opens external link)", click: f }, { type: "stackedColumn", showInLegend: !0, color: "#016ecd", name: "Defense", dataPoints: a.pokemonTypeGens[o][n].defense, toolTipContent: "Base <b>defense</b> of <b>{label}</b>: <b>{y}</b><br/><b>Defense</b> makes up <b>{p}%</b> of base stats total<br/>This pokémon is <b>{r}</b><br/>Click to see all data about <b>{label}</b> (opens external link)", click: f }, { type: "stackedColumn", showInLegend: !0, color: "#5ab75c", name: "Hit Points", dataPoints: a.pokemonTypeGens[o][n]["hit points"], toolTipContent: "Base <b>hit points</b> of <b>{label}</b>: <b>{y}</b><br/><b>Hit Points</b> make up <b>{p}%</b> of base stats total<br/>This pokémon is <b>{r}</b><br/>Click to see all data about <b>{label}</b> (opens external link)", click: f }, { type: "stackedColumn", showInLegend: !0, color: "#faa632", name: "Special Attack", dataPoints: a.pokemonTypeGens[o][n]["special attack"], toolTipContent: "Base <b>special attack</b> of <b>{label}</b>: <b>{y}</b><br/><b>Special Attack</b> makes up <b>{p}%</b> of base stats total<br/>This pokémon is <b>{r}</b><br/>Click to see all data about <b>{label}</b> (opens external link)", click: f }, { type: "stackedColumn", showInLegend: !0, color: "#4aafcd", name: "Special Defense", dataPoints: a.pokemonTypeGens[o][n]["special defense"], toolTipContent: "Base <b>special defense</b> of <b>{label}</b>: <b>{y}</b><br/><b>Special Defense</b> makes up <b>{p}%</b> of base stats total<br/>This pokémon is <b>{r}</b><br/>Click to see all data about <b>{label}</b> (opens external link)", click: f }, { type: "stackedColumn", showInLegend: !0, color: "#9d29b2", name: "Speed", dataPoints: a.pokemonTypeGens[o][n].speed, toolTipContent: "Base <b>speed</b> of <b>{label}</b>: <b>{y}</b><br/><b>Speed</b> makes up <b>{p}%</b> of base stats total<br/>This pokémon is <b>{r}</b><br/>Click to see all data about <b>{label}</b> (opens external link)", click: f }, { type: "line", axisYType: "secondary", showInLegend: !0, name: "Favorite Votes", color: "white", dataPoints: a.pokemonTypeGens[o][n].favorites, toolTipContent: "Votes casted for <b>{label}</b>: <b>{y}</b><br/>This pokémon is <b>{r}</b><br/>Click to see all data about <b>{label}</b> (opens external link)", click: f }] })).render() } function g(a, t, o) { c.removeClass("show"), p.show(); var n = { animationEnabled: !0, zoomEnabled: !0, theme: "dark1", axisX: { title: "Pokémon Generation" }, axisY: { title: t }, axisY2: {}, toolTip: { fontFamily: "Roboto" }, legend: { cursor: "pointer", itemclick: k }, data: a }; o && (n.axisY2 = { title: o }), (e = new CanvasJS.Chart("myChart", n)).render() } (s = "final-pokemon.csv", l = "./datasets/" + s, $.get(l)).then(function (e) { var t = function (e) { return Papa.parse(e, { headers: !0 }).data }(e); a = function (e) { for (var a = jQuery.extend(!0, {}, baseStatsTemplate), t = jQuery.extend(!0, {}, generationToArrayTemplate), o = {}, n = jQuery.extend(!0, {}, generationsToObjectTemplate), s = {}, l = [], b = 1; b < e.length - 1; b += 1) { var i = e[b], r = i[0]; t[r].push(i) } for (var p in t) if (t.hasOwnProperty(p)) { var d, r = t[p], c = sumDef = sumHP = sumSpAtk = sumSpDef = sumSpd = sumFavorites = 0, k = 0, h = 9999, v = leastVotedPokemon = "", f = {}, y = u(p), C = []; o[p] = jQuery.extend(!0, {}, baseStatsTemplate); for (var b = 0; b < r.length; b += 1) { var g = r[b], x = u(g[1]); d = g[3]; var T = parseInt(g[12]); C.push(T), T > k && (k = T, v = x), T < h && (h = T, leastVotedPokemon = x), f[d] ? (f[d].count += 1, f[d].votes += T) : f[d] = { count: 1, votes: T }, n[p][d] || (n[p][d] = jQuery.extend(!0, {}, baseStatsTemplate)), n[p][d].attack.push({ label: x, dexNum: g[2], y: parseInt(g[4]), p: (g[4] / g[10] * 100).toFixed(1), r: g[11] }), n[p][d].defense.push({ label: x, dexNum: g[2], y: parseInt(g[5]), p: (g[5] / g[10] * 100).toFixed(1), r: g[11] }), n[p][d]["hit points"].push({ label: x, dexNum: g[2], y: parseInt(g[6]), p: (g[6] / g[10] * 100).toFixed(1), r: g[11] }), n[p][d]["special attack"].push({ label: x, dexNum: g[2], y: parseInt(g[7]), p: (g[7] / g[10] * 100).toFixed(1), r: g[11] }), n[p][d]["special defense"].push({ label: x, dexNum: g[2], y: parseInt(g[8]), p: (g[8] / g[10] * 100).toFixed(1), r: g[11] }), n[p][d].speed.push({ label: x, dexNum: g[2], y: parseInt(g[9]), p: (g[9] / g[10] * 100).toFixed(1), r: g[11] }), n[p][d].favorites.push({ label: x, dexNum: g[2], y: T, r: g[11] }), o[p].attack.push({ label: x, dexNum: g[2], y: parseInt(g[4]), p: (g[4] / g[10] * 100).toFixed(1), r: g[11] }), o[p].defense.push({ label: x, dexNum: g[2], y: parseInt(g[5]), p: (g[5] / g[10] * 100).toFixed(1), r: g[11] }), o[p]["hit points"].push({ label: x, dexNum: g[2], y: parseInt(g[6]), p: (g[6] / g[10] * 100).toFixed(1), r: g[11] }), o[p]["special attack"].push({ label: x, dexNum: g[2], y: parseInt(g[7]), p: (g[7] / g[10] * 100).toFixed(1), r: g[11] }), o[p]["special defense"].push({ label: x, dexNum: g[2], y: parseInt(g[8]), p: (g[8] / g[10] * 100).toFixed(1), r: g[11] }), o[p].speed.push({ label: x, dexNum: g[2], y: parseInt(g[9]), p: (g[9] / g[10] * 100).toFixed(1), r: g[11] }), o[p].favorites.push({ label: x, dexNum: g[2], y: T, r: g[11] }), c += parseInt(g[4]), sumDef += parseInt(g[5]), sumHP += parseInt(g[6]), sumSpAtk += parseInt(g[7]), sumSpDef += parseInt(g[8]), sumSpd += parseInt(g[9]), sumFavorites += T } for (var P of pokemonTypes) s[P] || (s[P] = []), f[P] ? s[P].push({ label: y, y: f[P].count, p: (f[P].count / r.length * 100).toFixed(2), v: f[P].votes, pv: (f[P].votes / sumFavorites * 100).toFixed(2), type: P }) : s[P].push({}); var S = sumFavorites / r.length; genVariance = m(S, C), genStdDev = Math.sqrt(genVariance).toFixed(2), a.attack.push({ label: y, y: Math.round(c / r.length) }), a.defense.push({ label: y, y: Math.round(sumDef / r.length) }), a["hit points"].push({ label: y, y: Math.round(sumHP / r.length) }), a["special attack"].push({ label: y, y: Math.round(sumSpAtk / r.length) }), a["special defense"].push({ label: y, y: Math.round(sumSpDef / r.length) }), a.speed.push({ label: y, y: Math.round(sumSpd / r.length) }), a.favorites.push({ label: y, y: Math.round(S), v: genVariance.toFixed(2), stddev: genStdDev }), l.push({ label: y, y: sumFavorites, mv: k, mp: v, lv: h, lp: leastVotedPokemon }) } return { averages: a, pokemonGens: o, pokemonTypeGens: n, numOfType: s, genFavorites: l } }(t), function () { for (var e = 0; e < baseStats.length; e += 1) { var t = baseStats[e], o = u(t); canvasData.baseStats.push({ type: "stackedColumn", showInLegend: !0, color: canvasColors.baseStats[t], name: o, dataPoints: a.averages[t], toolTipContent: "<b>Generation {label}:</b><br/>Average <b>" + o + "</b>: {y}<br/><hr/>Click to visualize <b>Generation {label}</b>", click: y }) } for (var e = 0; e < pokemonTypes.length; e += 1) { var n = pokemonTypes[e], s = u(n); canvasData.types.push({ type: "stackedColumn", showInLegend: !0, name: s, color: canvasColors.types[n], dataPoints: a.numOfType[n], toolTipContent: "<b>Generation {label}:</b><br/>Number of <b>" + s + "</b> Pokémon Introduced: {y}<br/>Percentage of Total Pokémon Added: {p}%<br/>Total votes for <b>" + s + "</b> Pokémon: {v}<br/>Percentage of Total Votes: {pv}%<br/><hr/>Click to visualize <b>" + s + "</b> type pokémon in <b>Generation {label}</b>", click: C }) } canvasData.totalFav = [{ type: "line", showInLegend: !0, name: "Favorites", color: "white", dataPoints: a.genFavorites, toolTipContent: "<b>Generation {label}:</b><br/>Number of Votes: {y}<br/><b>{mp}</b> had the <b>most votes</b> at <b>{mv}</b> votes<br/><b>{lp}</b> had the <b>least votes</b> at <b>{lv}</b> votes<br/><hr/>Click to visualize <b>Generation {label}</b>", click: y }], canvasData.avgFav = [{ type: "line", showInLegend: !0, name: "Avg. Number of Favorites", color: "white", dataPoints: a.averages.favorites, toolTipContent: "<b>Generation {label}:</b><br/>Avg. Number of Votes per Pokémon: {y}<br/>Sample variance: {v}<br/>Sample standard deviation: {stddev}<br/><hr/>Click to visualize <b>Generation {label}</b>", click: y }] }() }), c.on("click", function () { e && (e.destroy(), e = null), g(t, o, n) }), b.on("change", function () { var e = b.val(), a = i.val(); "all" === e ? (i.attr("disabled", "disabled"), r.removeClass("disabled")) : (e && a && e !== a ? r.removeClass("disabled") : e && a && e === a && r.addClass("disabled"), i.removeAttr("disabled"), i.children().each(function () { var a = $(this); a.val() === e ? a.attr("disabled", "disabled") : "title" !== a.val() && a.removeAttr("disabled") })) }), i.on("change", function () { var e = b.val(), a = i.val(); e && a && e !== a ? r.removeClass("disabled") : e && a && e === a && r.addClass("disabled") }), r.on("click", function () { $(this).hasClass("disabled") || (d.hide(), function (e, a) { if ("all" === e) { canvasData.totalFav[0].color = "red"; for (var s = canvasData.baseStats.concat(canvasData.totalFav), l = canvasData.types.concat(canvasData.avgFav), b = 0; b < s.length; b += 1)s[b].axisYType = "primary"; for (var i = 0; i < l.length; i += 1)l[i].axisYType = "secondary"; t = canvasData.baseStats.concat(l, canvasData.totalFav), o = "Pokémon Average Base Stats & Total Favorite Votes", n = "Number of Pokémon Introduced by Type & Average Votes per Pokémon" } else if ("onlyFirst" === a) t = canvasData[e], o = v(e), n = void 0; else { for (var r = canvasData[e], p = canvasData[a], b = 0; b < r.length; b += 1)r[b].axisYType = "primary"; for (var i = 0; i < p.length; i += 1)p[i].axisYType = "secondary"; "line" === r[0].type && "line" === p[0].type ? (r[0].color = "red", p[0].color = "white") : "line" === r[0].type && "line" !== p[0].type ? r[0].color = "white" : "line" !== r[0].type && "line" === p[0].type && (p[0].color = "white"), t = "line" === r[0].type ? p.concat(r) : r.concat(p), o = v(e), n = v(a) } g(t, o, n) }(b.val(), i.val())) }) });